DEFINITION MODULE db_db3;

IMPORT FM, dBase;

TYPE ptrDB3 = POINTER TO dB3File;
CLASS dB3File;
    f_DAT     :dBase.BaseType;
    Dir       :FM.PathStr;
    DataName  :FM.PathStr;

    PROCEDURE LockFile();
    PROCEDURE UnLockFile();

    PROCEDURE SeekData(  i :FM.IndexType );
    PROCEDURE WrData ( VAR d :ARRAY OF BYTE );

 (*# save, call( result_optional => on ) *)
    PROCEDURE RdData ( VAR d :ARRAY OF BYTE ) :BOOLEAN;
    PROCEDURE GetData ( i :FM.IndexType; VAR data :ARRAY OF BYTE ) :BOOLEAN;
    PROCEDURE PutData ( i :FM.IndexType; VAR data :ARRAY OF BYTE ) :BOOLEAN;
 (*# restore *)

    VIRTUAL PROCEDURE InitData( VAR d :ARRAY OF BYTE );

    VIRTUAL PROCEDURE Comp( d1, d2 :FM.IndexType ) :BOOLEAN;
    (*
       Utilizado por el algoritmo de Sort.
    *)

    VIRTUAL PROCEDURE Compare( VAR d1, d2 :ARRAY OF BYTE ) :INTEGER;
    (*
       Utilizado por el algoritmo de Busqueda Binaria.
    *)

    VIRTUAL PROCEDURE GetKeyStr( i :FM.IndexType; VAR s :ARRAY OF CHAR );

    PROCEDURE SetPath( path :ARRAY OF CHAR ); (* Agregado el 25-03-94 *)

  (*# save, call( result_optional => on ) *)
    PROCEDURE Open( name :ARRAY OF CHAR; fields :ARRAY OF dBase.FieldDef; new :BOOLEAN ) :BOOLEAN;
  (*# restore *)
    PROCEDURE Create( name :ARRAY OF CHAR; fields :ARRAY OF dBase.FieldDef );
    PROCEDURE OpenExists( name :ARRAY OF CHAR ) :BOOLEAN;
    PROCEDURE Exists( name :ARRAY OF CHAR ) :BOOLEAN;
    PROCEDURE FileSize() :FM.IndexType;
    PROCEDURE Sync();
    PROCEDURE CloseFile();

    PROCEDURE New( VAR d :ARRAY OF BYTE );

 (*# save, call( result_optional => on ) *)
    PROCEDURE Get( i :FM.IndexType; VAR d :ARRAY OF BYTE ) :BOOLEAN;
 (*# restore *)

    PROCEDURE Put( i :FM.IndexType; VAR d :ARRAY OF BYTE );
    PROCEDURE Del( i :FM.IndexType );

    PROCEDURE SearchFile(     search :ARRAY OF BYTE;
                          VAR index  :FM.IndexType;
                          VAR data   :ARRAY OF BYTE ) :BOOLEAN;

 (*# save, call( result_optional => on ) *)
    PROCEDURE SortFile() :BOOLEAN;
    PROCEDURE Rebuild();
    PROCEDURE UnSortFile() :BOOLEAN;
 (*# restore *)

    PROCEDURE Copy( VAR _file :dB3File; name :ARRAY OF CHAR );

END dB3File;

PROCEDURE Erase( name :ARRAY OF CHAR );
PROCEDURE Rename( old_name, new_name :ARRAY OF CHAR );

PROCEDURE Rebuild( name :ARRAY OF CHAR );

TYPE ErrorType = CARDINAL;

CONST no_error       = 0;
      file_not_found = 1;

PROCEDURE Error() :ErrorType;
(*
   Toma los errores de los archivos de "base_ndx".
*)

END db_db3.
